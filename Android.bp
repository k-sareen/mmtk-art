package {
    default_applicable_licenses: ["mmtk-art_license"],
}

license {
    name: "mmtk-art_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
        "SPDX-license-identifier-MIT",
    ],
    license_text: [
        "LICENSE-APACHE",
        "LICENSE-MIT",
    ],
}

cc_library_headers {
    name: "libmmtk_art_headers",
    host_supported: true,
    visibility: ["//visibility:public"],
    export_include_dirs: ["art"],
    apex_available: [
        "//apex_available:platform",
        "//apex_available:anyapex",
    ],
    min_sdk_version: "31",
}

rust_ffi_shared {
    name: "libmmtk_art",
    host_supported: true,
    prefer_rlib: true,
    visibility: ["//visibility:public"],
    crate_name: "mmtk_art",
    srcs: ["mmtk/src/lib.rs"],
    include_dirs: ["art"],
    rustlibs: [
        "libatrace_rust",
        "liblazy_static",
        "liblibc",
        "libmemoffset",
        "libmmtk",
    ],
    target: {
        android: {
            rustlibs: [
                "libandroid_logger", // only on APEX builds
                "liblog_rust",
            ],
        },
    },
    // features: [
    //     "simple_scan_object",
    // ],
    // If we want to use MMTk's USDT tracing facilities, then we need
    // to avoid stripping the section
    // strip: {
    //     none: true,
    // },
    // "debug" build
    // flags: [
    //     "-C opt-level=0",
    //     "-C debuginfo=2",
    //     "-C strip=none",
    //     "-C debug-assertions=true",
    //     "-C overflow-checks=true",
    //     "-C codegen-units=256",
    // ],
    // "release" build
    // XXX(kunals): Disable linker fatal warnings due to incompatible
    // DWARF versions between Rust and C++ when using LTO
    flags: [
        "-C lto=true",
        "-C linker-plugin-lto=true",
        "-C link-arg=-Wl,--no-fatal-warnings",
        // "-C opt-level=3",
        // "-C debuginfo=0",
        // "-C strip=symbols",
        // "-C debug-assertions=false",
        // "-C overflow-checks=false",
        // "-C codegen-units=1",
        // "-C profile-generate=/tmp/kunals/pgo-data",
        // "-C profile-use=/tmp/kunals/pgo-data/profiles/2025-02-20-libmmtk_art.x86_64.profdata",
        // "-C profile-use=/tmp/kunals/pgo-data/profiles/merged.profdata",
        // "-C llvm-args=-pgo-warn-missing-function",
    ],
    apex_available: [
        "//apex_available:platform",
        "//apex_available:anyapex",
    ],
    min_sdk_version: "31",
}
